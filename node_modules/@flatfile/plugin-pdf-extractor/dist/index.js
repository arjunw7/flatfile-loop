import { fileBuffer } from '@flatfile/util-file-buffer';
import { FlatfileClient } from '@flatfile/api';
import { logError, logInfo } from '@flatfile/util-common';
import P from 'cross-fetch';
import v from 'form-data';
import * as o from 'fs-extra';
import * as d from 'remeda';

var h=new FlatfileClient,m=async(n,e,a,t)=>{let{environmentId:f,spaceId:u}=n.context;if(!(e.ext!=="pdf"||e.mode!=="import")){if(d.isEmpty(t.apiKey)){logError("@flatfile/plugin-pdf-extractor","Found invalid API key");return}try{let l=`https://pdftables.com/api?key=${t.apiKey}&format=csv`,s=`${e.name.replace(".pdf","")} (Converted PDF)-${E()}.csv`,p=new v;p.append("file",a,{filename:e.name});let g={method:"POST",body:p,headers:p.getHeaders()},c=await P(l,g);if(c.status!==200){logError("@flatfile/plugin-pdf-extractor","Failed to convert PDF on pdftables.com");return}let y=await c.text();o.writeFile(s,y,async F=>{if(F){t.debug&&logError("@flatfile/plugin-pdf-extractor","Error writing file to disk");return}try{let i=o.createReadStream(s);await h.files.upload(i,{spaceId:u,environmentId:f,mode:"import"}),i.close();}catch(i){t.debug&&logError("@flatfile/plugin-pdf-extractor","Failed to upload PDF->CSV file"),logError("@flatfile/plugin-pdf-extractor",JSON.stringify(i,null,2));}});}catch(l){logError("@flatfile/plugin-pdf-extractor",JSON.stringify(l,null,2));}t.debug&&logInfo("@flatfile/plugin-pdf-extractor","Done");}},E=()=>`${Math.floor(Date.now()/1e3)}`;var N=n=>e=>{e.use(fileBuffer(".pdf",async(a,t,f)=>{await m(f,a,t,n);}));};

export { N as pdfExtractorPlugin };
//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map