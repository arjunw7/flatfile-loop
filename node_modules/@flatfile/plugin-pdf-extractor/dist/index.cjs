'use strict';

var utilFileBuffer = require('@flatfile/util-file-buffer');
var api = require('@flatfile/api');
var utilCommon = require('@flatfile/util-common');
var P = require('cross-fetch');
var v = require('form-data');
var o = require('fs-extra');
var d = require('remeda');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

function _interopNamespace(e) {
	if (e && e.__esModule) return e;
	var n = Object.create(null);
	if (e) {
		Object.keys(e).forEach(function (k) {
			if (k !== 'default') {
				var d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: function () { return e[k]; }
				});
			}
		});
	}
	n.default = e;
	return Object.freeze(n);
}

var P__default = /*#__PURE__*/_interopDefault(P);
var v__default = /*#__PURE__*/_interopDefault(v);
var o__namespace = /*#__PURE__*/_interopNamespace(o);
var d__namespace = /*#__PURE__*/_interopNamespace(d);

var h=new api.FlatfileClient,m=async(n,e,a,t)=>{let{environmentId:f,spaceId:u}=n.context;if(!(e.ext!=="pdf"||e.mode!=="import")){if(d__namespace.isEmpty(t.apiKey)){utilCommon.logError("@flatfile/plugin-pdf-extractor","Found invalid API key");return}try{let l=`https://pdftables.com/api?key=${t.apiKey}&format=csv`,s=`${e.name.replace(".pdf","")} (Converted PDF)-${E()}.csv`,p=new v__default.default;p.append("file",a,{filename:e.name});let g={method:"POST",body:p,headers:p.getHeaders()},c=await P__default.default(l,g);if(c.status!==200){utilCommon.logError("@flatfile/plugin-pdf-extractor","Failed to convert PDF on pdftables.com");return}let y=await c.text();o__namespace.writeFile(s,y,async F=>{if(F){t.debug&&utilCommon.logError("@flatfile/plugin-pdf-extractor","Error writing file to disk");return}try{let i=o__namespace.createReadStream(s);await h.files.upload(i,{spaceId:u,environmentId:f,mode:"import"}),i.close();}catch(i){t.debug&&utilCommon.logError("@flatfile/plugin-pdf-extractor","Failed to upload PDF->CSV file"),utilCommon.logError("@flatfile/plugin-pdf-extractor",JSON.stringify(i,null,2));}});}catch(l){utilCommon.logError("@flatfile/plugin-pdf-extractor",JSON.stringify(l,null,2));}t.debug&&utilCommon.logInfo("@flatfile/plugin-pdf-extractor","Done");}},E=()=>`${Math.floor(Date.now()/1e3)}`;var N=n=>e=>{e.use(utilFileBuffer.fileBuffer(".pdf",async(a,t,f)=>{await m(f,a,t,n);}));};

exports.pdfExtractorPlugin = N;
//# sourceMappingURL=index.cjs.map
//# sourceMappingURL=index.cjs.map