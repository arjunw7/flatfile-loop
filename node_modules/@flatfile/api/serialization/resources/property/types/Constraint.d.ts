/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as Flatfile from "../../../../api";
import * as core from "../../../../core";
import { UniqueConstraint } from "./UniqueConstraint";
import { ExternalConstraint } from "./ExternalConstraint";
import { StoredConstraint } from "./StoredConstraint";
export declare const Constraint: core.serialization.Schema<serializers.Constraint.Raw, Flatfile.Constraint>;
export declare namespace Constraint {
    type Raw = Constraint.Required | Constraint.Unique | Constraint.Computed | Constraint.External | Constraint.Stored;
    interface Required {
        type: "required";
    }
    interface Unique extends UniqueConstraint.Raw {
        type: "unique";
    }
    interface Computed {
        type: "computed";
    }
    interface External extends ExternalConstraint.Raw {
        type: "external";
    }
    interface Stored extends StoredConstraint.Raw {
        type: "stored";
    }
}
